# Test cases for 'Invisible staged docs for Transactions' (MB-37374 / TXNJ-125)

Atomicity.doc_isolation.IsolationDocTest:
    # Create Tests
    test_staged_doc_read,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=create,operation=beforeAtrPending,GROUP=P0;luks
    test_staged_doc_read,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=create,operation=afterAtrPending,GROUP=P0;luks
    test_staged_doc_read,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=create,operation=afterAtrCommit,GROUP=P0;luks

    test_staged_doc_query_from_index,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=create,operation=beforeAtrPending,GROUP=P0;luks
    test_staged_doc_query_from_index,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=create,operation=afterAtrPending,GROUP=P0;luks
    test_staged_doc_query_from_index,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=create,operation=afterAtrCommit,GROUP=P0;luks

    # Update Tests
    test_staged_doc_read,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=update,operation=beforeAtrPending,GROUP=P0;luks
    test_staged_doc_read,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=update,operation=afterAtrPending,GROUP=P0;luks
    test_staged_doc_read,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=update,operation=afterAtrCommit,GROUP=P0;luks

    test_staged_doc_query_from_index,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=update,operation=beforeAtrPending,GROUP=P0;luks
    test_staged_doc_query_from_index,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=update,operation=afterAtrPending,GROUP=P0;luks
    test_staged_doc_query_from_index,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=update,operation=afterAtrCommit,GROUP=P0;luks

    # Delete Tests
    test_staged_doc_read,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=delete,operation=beforeAtrPending,GROUP=P0;luks
    test_staged_doc_read,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=delete,operation=afterAtrPending,GROUP=P0;luks
    test_staged_doc_read,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=delete,operation=afterAtrCommit,GROUP=P0;luks

    test_staged_doc_query_from_index,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=delete,operation=beforeAtrPending,GROUP=P0;luks
    test_staged_doc_query_from_index,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=delete,operation=afterAtrPending,GROUP=P0;luks
    test_staged_doc_query_from_index,nodes_init=3,num_items=1,replicas=1,transaction_timeout=30,transaction_commit=True,doc_op=delete,operation=afterAtrCommit,GROUP=P0;luks

    # Transaction with purger + bucket_compaction (Expiry Purger interval is set 1 greater than trans timeout)
    test_run_purger_during_transaction,nodes_init=3,replicas=2,num_items=100000,transaction_timeout=200,GROUP=P1

    # Tranx docs same as keys just got deleted but exists as tomb stones
    test_transaction_docs_keys_already_in_tombstone,nodes_init=2,replicas=1,num_items=10000,transaction_timeout=100,GROUP=P1
    test_transaction_docs_keys_already_in_tombstone,nodes_init=3,replicas=2,num_items=10000,maxttl=30,transaction_timeout=100,GROUP=P1

    # Rollback test using muliple docs
    test_rollback_transaction,nodes_init=2,replicas=1,num_items=1000,transaction_timeout=60,doc_op=create,GROUP=P1
    test_rollback_transaction,nodes_init=3,replicas=2,num_items=1000,transaction_timeout=60,doc_op=update,GROUP=P1
    test_rollback_transaction,nodes_init=3,replicas=2,num_items=1000,transaction_timeout=60,doc_op=delete,GROUP=P1

    # Rebalance with creates
    test_transaction_with_rebalance,nodes_init=1,replicas=0,num_items=20000,rebalance_type=in,nodes_in=3,doc_op=create,GROUP=P1
    test_transaction_with_rebalance,nodes_init=4,replicas=2,num_items=20000,rebalance_type=out,nodes_out=1,doc_op=create,GROUP=P1
    test_transaction_with_rebalance,nodes_init=2,replicas=1,num_items=20000,rebalance_type=swap,nodes_in=2,nodes_out=2,doc_op=create,GROUP=P1

    # Rebalance with updates
    test_transaction_with_rebalance,nodes_init=1,replicas=0,num_items=20000,rebalance_type=in,nodes_in=3,doc_op=update,GROUP=P1
    test_transaction_with_rebalance,nodes_init=4,replicas=2,num_items=20000,rebalance_type=out,nodes_out=1,doc_op=update,GROUP=P1
    test_transaction_with_rebalance,nodes_init=2,replicas=1,num_items=20000,rebalance_type=swap,nodes_in=2,nodes_out=2,doc_op=update,GROUP=P1

    # Rebalance with deletes
    test_transaction_with_rebalance,nodes_init=1,replicas=0,num_items=20000,rebalance_type=in,nodes_in=3,doc_op=delete,GROUP=P1
    test_transaction_with_rebalance,nodes_init=4,replicas=2,num_items=20000,rebalance_type=out,nodes_out=1,doc_op=delete,GROUP=P1
    test_transaction_with_rebalance,nodes_init=2,replicas=1,num_items=20000,rebalance_type=swap,nodes_in=2,nodes_out=2,doc_op=delete,GROUP=P1
