cbas.cbas_udf_management.CBASUDF:
    # Create UDF with parameters with 1 and 2 part dataverse name.
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,cardinality=1,num_create_params=2
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,cardinality=2,num_create_params=2
    
    # Create UDF with parameters with 1 and 2 part dataverse name and USE statement
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,cardinality=1,use_statement=True,num_create_params=2
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,cardinality=2,use_statement=True,num_create_params=2
    
    # Create UDF with parameters with 1 and 2 part dataverse name and query_context
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,cardinality=1,query_context=True,num_create_params=2
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,cardinality=2,query_context=True,num_create_params=2
    
    # Create UDF with reserved name escaped with ``
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,func_name=`Function`,num_create_params=2
    
    # Create UDF with reserved name not escaped with ``
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,func_name=Function,validate_error=True,expected_error=Syntax error
    
    # Create UDF without passing any dataverse name
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,no_dataverse=True,num_create_params=2
    
    # Create UDF in Metadata dataverse
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,dataverse_name=Metadata,validate_error=True,expected_error=Cannot create a function belonging to the dataverse: Metadata
    
    # Create UDF in non-existent dataverse
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,dataverse_name=invalid,validate_error=True,expected_error=Cannot find dataverse with name invalid
    
    # Create UDF with no parameters
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1
    
    # Create UDF without providing opening and closing parameter brackets
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=-2,validate_error=True,expected_error=Syntax error
    
    # Create UDF with large number of params
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=1000
    
    # Create a variadic UDF
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=-1,num_execute_params=5
    
    # Create a variadic UDF and pass large number of parameters while executing
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=-1,num_execute_params=10000
    
    # Create UDF with no body
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,no_body=True,validate_error=True,expected_error=Syntax error
    
    # Create UDF with subquery in function body, with subquery explicitly referring to a dataset in same dataverse as the function
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=0,body_type=dataset
    
    # Create UDF with subquery in function body, with subquery implicitly referring to a dataset in same dataverse as the function
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=0,body_type=dataset,use_full_name=False
    
    # Create UDF with subquery in function body, with subquery referring to a dataset in different dataverse as the function
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=0,body_type=dataset,dependent_entity_dv=diff
    
    # Create UDF with subquery in function body, with subquery referring to a non-existent dataset
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=0,invalid_ds=True,validate_error=True,expected_error=Cannot find dataset invalid in dataverse Default nor an alias with name invalid
    
    # Create UDF with subquery in function body, with subquery explicitly referring to a Synonym in same dataverse as the function
    #test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=0,body_type=synonym
    # Create UDF with subquery in function body, with subquery implicitly referring to a Synonym in same dataverse as the function
    #test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=0,body_type=synonym,use_full_name=False
    # Create UDF with subquery in function body, with subquery referring to a Synonym in different dataverse as the function
    #test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=0,body_type=synonym,dependent_entity_dv=diff
    
    # Create UDF with empty string as parameters
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,custom_params=empty_string,validate_error=True,expected_error=Syntax error
    
    # Create UDF with a mix of params and ...
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,custom_params=mix_param_1,validate_error=True,expected_error=Syntax error
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,custom_params=mix_param_2,validate_error=True,expected_error=Syntax error
    
    # Create UDF with int parameters
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,custom_params=int_param,validate_error=True,expected_error=Syntax error
    
    # Create UDF with bool parameters
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,custom_params=bool_param,validate_error=True,expected_error=Syntax error
    
    # Execute function by passing less number of parameters than the function requires
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_execute_params=1,validate_execute_error=True,expected_error=Cannot find function with signature
    
    # Execute function by passing more number of parameters than the function requires
    test_create_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_execute_params=3,validate_execute_error=True,expected_error=Cannot find function with signature
    
    # Create multiple UDFs with same function name but different number of parameters in same dataverse
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_test_udf_params=3,test_udf_name=same,test_udf_dv=same
    
    # Create multiple UDFs with same function name but different number of parameters in different dataverse
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_test_udf_params=3,test_udf_name=same
    
    # Create multiple UDFs with same function name, same number of parameter in same dataverse.
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_test_udf_params=2,test_udf_name=same,test_udf_dv=same,test_udf_param_name=same,validate_error=True,expected_error=A function with this name {0} already exists
    
    # Create multiple UDFs with same function name, same number of parameter but parameter names are different in same dataverse.
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_test_udf_params=2,test_udf_name=same,test_udf_dv=same,test_udf_param_name=diff,validate_error=True,expected_error=A function with this name {0} already exists
    
    # Create multiple UDFs with same function name, same number of parameter in different dataverse.
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_test_udf_params=2,test_udf_name=same,test_udf_dv=diff,test_udf_param_name=same
    
    # Create a variadic UDF when a function with same name and no parameter exists
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=0,num_test_udf_params=-1,test_udf_name=same,test_udf_dv=same,num_execute_params=10
    
    # Create a variadic UDF when a function with same name and multiple parameters exists
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=3,num_test_udf_params=-1,test_udf_name=same,test_udf_dv=same,num_execute_params=10
    
    # Create UDF with subquery in function body, with subquery explicitly referring to a function in same dataverse as the function
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_test_udf_params=2,body_type=udf,test_udf_dv=same
    
    # Create UDF with subquery in function body, with subquery implicitly referring to a function in same dataverse as the function
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_test_udf_params=2,body_type=udf,use_full_name=False,test_udf_dv=same
    
    # Create UDF with subquery in function body, with subquery referring to a function in different dataverse as the function
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_test_udf_params=2,body_type=udf,use_full_name=True,test_udf_dv=same,dependent_entity_dv=diff
    
    # Create multiple UDFs with "OR REPLACE", with same name and same number of parameters with same parameter name
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_test_udf_params=2,test_udf_name=same,test_udf_dv=same,test_udf_param_name=same,or_replace=True
    
    # Create multiple UDFs with "OR REPLACE", with same name and same number of parameters with different parameter name
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_test_udf_params=2,test_udf_name=same,test_udf_dv=same,test_udf_param_name=diff,or_replace=True
    
    # Create multiple UDFs with "OR REPLACE", with same name and different number of parameters
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_test_udf_params=3,test_udf_name=same,test_udf_dv=same,or_replace=True
    
    # Create multiple UDFs with "OR REPLACE", with different function signatures
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_test_udf_params=3,or_replace=True
    
    # Create a UDF with both "OR REPLACE" and "IF NOT EXISTS" in same DDL statement.
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_test_udf_params=3,or_replace=True,if_not_exists=True,validate_error=True,expected_error=Syntax error: Unexpected IF NOT EXISTS
    
    # Create multiple UDF with If not exists flag
    test_create_multiple_analytics_udfs,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,num_test_udf_params=2,test_udf_name=same,test_udf_dv=same,if_not_exists=True,body_type=dataset
    
    # Drop UDF without using opening and closing brackets
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,no_params=True,validate_error=True,expected_error=Syntax error
    
    # Drop UDF with parameters with 1 and 2 part dataverse name.
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,cardinality=1,num_create_params=2
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,cardinality=2,num_create_params=2
    
    # Drop UDF with parameters with 1 and 2 part dataverse name and USE statement
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,cardinality=1,use_statement=True,num_create_params=2
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,cardinality=2,use_statement=True,num_create_params=2
    
    # Drop UDF with parameters with 1 and 2 part dataverse name and query_context
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,cardinality=1,query_context=True,num_create_params=2
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,cardinality=2,query_context=True,num_create_params=2
    
    # Drop UDF with if exists flag.
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,if_exists=True
    
    # Drop UDF with if exists flag when no function with the name exists
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,if_exists=True,invalid_name=True
    
    # Drop UDF with if exists flag on non-existent dataverse
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,if_exists=True,invalid_dataverse=True
    
    # Drop UDF on non-existent dataverse
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,invalid_dataverse=True,validate_error=True,expected_error=Cannot find dataverse with name invalid
    
    # Drop UDF, when the other function using this UDF is in same dataverse as UDF to be dropped.
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,second_udf=True,dependent_entity_dv=same,validate_error=True,expected_error=Internal error
    
    # Drop UDF, when the other function using this UDF is in different dataverse as UDF to be dropped.
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,second_udf=True,dependent_entity_dv=diff,validate_error=True,expected_error=Internal error
    
    # Pass Same number of parameters as was defined for UDF being dropped, the name of parameters are different
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,change_params=2
    
    # Pass parameters when UDF being dropped was created without any parameters
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=0,change_params=2,validate_error=True,expected_error=Cannot find function with signature
    
    # Pass parameters when UDF being dropped was created with more/less parameters than being passed
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=5,change_params=2,validate_error=True,expected_error=Cannot find function with signature
    
    # Pass parameters when UDF being dropped was created as variadic UDF
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=-1,change_params=2,validate_error=True,expected_error=Cannot find function with signature
    
    # Pass No parameters when UDF being dropped was created without any parameters
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=0
    
    # Pass No parameters when UDF being dropped was created with multiple parameters
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,change_params=0,validate_error=True,expected_error=Cannot find function with signature
    
    # Pass No parameters when UDF being dropped was created as variadic UDF
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=-1,change_params=0,validate_error=True,expected_error=Cannot find function with signature
    
    # Pass variadic parameter when UDF being dropped was created without any parameters
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=0,change_params=-1,validate_error=True,expected_error=Cannot find function with signature
    
    # Pass variadic parameter when UDF being dropped was created with multiple parameters
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=2,change_params=-1,validate_error=True,expected_error=Cannot find function with signature
    
    # Drop a variadic function
    test_drop_analytics_udf,num_buckets=1,num_scopes=2,num_collections=1,num_create_params=-1
    test_create_dataset_with_udf_in_where_clause,num_buckets=1,num_scopes=2,num_collections=1
    
    # Drop dataset used by UDF, when both are in same dataverse
    test_drop_dataset_while_it_is_being_used_by_UDF,num_buckets=1,num_scopes=2,num_collections=1,dependent_entity_dv=same
    
    # Drop dataset used by UDF, when both are in different dataverse
    test_drop_dataset_while_it_is_being_used_by_UDF,num_buckets=1,num_scopes=2,num_collections=1,dependent_entity_dv=diff
    
    test_drop_dataverse_with_udf_and_dependent_entities,num_buckets=1,num_scopes=2,num_collections=1,dependent_entity_dv=same
    test_drop_dataverse_with_udf_and_dependent_entities,num_buckets=1,num_scopes=2,num_collections=1,dependent_entity_dv=diff,validate_error=True,expected_error=Cannot find function with signature